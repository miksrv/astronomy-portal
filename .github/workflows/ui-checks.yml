name: UI Checks

on:
  pull_request:
    branches:
      - main
    paths:
      - 'client/**/*'

jobs:
  ui-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18
          cache: 'yarn'
          cache-dependency-path: 'client/yarn.lock'

      - name: Cache node modules
        uses: actions/cache@v3
        id: cache-npm
        with:
          path: |
            client/node_modules
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-modules-${{ hashFiles('client/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: Install dependencies
        working-directory: client
        run: yarn install

      - name: Linter
        run: yarn eslint:check
        working-directory: client

      - name: Prettier
        run: yarn prettier:check
        working-directory: client

      - name: Cache UI build
        uses: actions/cache@v3
        id: cache-build
        with:
          path: client/out
          key: ${{ runner.os }}-build-${{ hashFiles('client/**/*.ts', 'client/**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-build.outputs.cache-hit != 'true' }}
        name: Configure Client
        run: |
          echo "NEXT_PUBLIC_API_HOST = '${{ secrets.NEXT_PUBLIC_API_HOST }}'" > .env
        working-directory: client

      - if: ${{ steps.cache-build.outputs.cache-hit != 'true' }}
        name: Build UI
        run: |
          export dateNow=$(date +"%d.%m.%Y %H:%M")
          echo "export const update = '$dateNow'" > update.ts
          yarn build
#          yarn export <- This is not needed if we use NodeJS server
        working-directory: client

#      - name: Tests
#        run: npm run test:coverage
#        working-directory: client
#
#      - name: SonarCloud Scan
#        uses: SonarSource/sonarcloud-github-action@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
